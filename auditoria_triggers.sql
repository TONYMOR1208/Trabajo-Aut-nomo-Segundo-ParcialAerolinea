
        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_USUARIOS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_USUARIOS_trg
    AFTER INSERT OR UPDATE OR DELETE ON USUARIOS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('USUARIOS', USER, 'INSERT', :NEW.USUARIO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.APELLIDO || ',' || :NEW.EMAIL || ',' || :NEW.FECHA_REGISTRO);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('USUARIOS', USER, 'UPDATE', :NEW.USUARIO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.APELLIDO || ',' || :NEW.EMAIL || ',' || :NEW.FECHA_REGISTRO);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('USUARIOS', USER, 'DELETE', :OLD.USUARIO_ID || ',' || :OLD.NOMBRE || ',' || :OLD.APELLIDO || ',' || :OLD.EMAIL || ',' || :OLD.FECHA_REGISTRO);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_ROLES_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_ROLES_trg
    AFTER INSERT OR UPDATE OR DELETE ON ROLES
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('ROLES', USER, 'INSERT', :NEW.ROL_ID || ',' || :NEW.NOMBRE);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('ROLES', USER, 'UPDATE', :NEW.ROL_ID || ',' || :NEW.NOMBRE);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('ROLES', USER, 'DELETE', :OLD.ROL_ID || ',' || :OLD.NOMBRE);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_USUARIOS_ROLES_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_USUARIOS_ROLES_trg
    AFTER INSERT OR UPDATE OR DELETE ON USUARIOS_ROLES
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('USUARIOS_ROLES', USER, 'INSERT', :NEW.USUARIO_ID || ',' || :NEW.ROL_ID);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('USUARIOS_ROLES', USER, 'UPDATE', :NEW.USUARIO_ID || ',' || :NEW.ROL_ID);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('USUARIOS_ROLES', USER, 'DELETE', :OLD.USUARIO_ID || ',' || :OLD.ROL_ID);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_AEROLINEAS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_AEROLINEAS_trg
    AFTER INSERT OR UPDATE OR DELETE ON AEROLINEAS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AEROLINEAS', USER, 'INSERT', :NEW.AEROLINEA_ID || ',' || :NEW.NOMBRE || ',' || :NEW.PAIS);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AEROLINEAS', USER, 'UPDATE', :NEW.AEROLINEA_ID || ',' || :NEW.NOMBRE || ',' || :NEW.PAIS);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AEROLINEAS', USER, 'DELETE', :OLD.AEROLINEA_ID || ',' || :OLD.NOMBRE || ',' || :OLD.PAIS);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_AEROPUERTOS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_AEROPUERTOS_trg
    AFTER INSERT OR UPDATE OR DELETE ON AEROPUERTOS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AEROPUERTOS', USER, 'INSERT', :NEW.AEROPUERTO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.CIUDAD || ',' || :NEW.PAIS);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AEROPUERTOS', USER, 'UPDATE', :NEW.AEROPUERTO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.CIUDAD || ',' || :NEW.PAIS);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AEROPUERTOS', USER, 'DELETE', :OLD.AEROPUERTO_ID || ',' || :OLD.NOMBRE || ',' || :OLD.CIUDAD || ',' || :OLD.PAIS);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_VUELOS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_VUELOS_trg
    AFTER INSERT OR UPDATE OR DELETE ON VUELOS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('VUELOS', USER, 'INSERT', :NEW.VUELO_ID || ',' || :NEW.AEROLINEA_ID || ',' || :NEW.ORIGEN_AEROPUERTO_ID || ',' || :NEW.DESTINO_AEROPUERTO_ID || ',' || :NEW.FECHA_SALIDA || ',' || :NEW.FECHA_LLEGADA);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('VUELOS', USER, 'UPDATE', :NEW.VUELO_ID || ',' || :NEW.AEROLINEA_ID || ',' || :NEW.ORIGEN_AEROPUERTO_ID || ',' || :NEW.DESTINO_AEROPUERTO_ID || ',' || :NEW.FECHA_SALIDA || ',' || :NEW.FECHA_LLEGADA);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('VUELOS', USER, 'DELETE', :OLD.VUELO_ID || ',' || :OLD.AEROLINEA_ID || ',' || :OLD.ORIGEN_AEROPUERTO_ID || ',' || :OLD.DESTINO_AEROPUERTO_ID || ',' || :OLD.FECHA_SALIDA || ',' || :OLD.FECHA_LLEGADA);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_PASAJEROS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_PASAJEROS_trg
    AFTER INSERT OR UPDATE OR DELETE ON PASAJEROS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('PASAJEROS', USER, 'INSERT', :NEW.PASAJERO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.APELLIDO || ',' || :NEW.EMAIL || ',' || :NEW.TELEFONO);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('PASAJEROS', USER, 'UPDATE', :NEW.PASAJERO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.APELLIDO || ',' || :NEW.EMAIL || ',' || :NEW.TELEFONO);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('PASAJEROS', USER, 'DELETE', :OLD.PASAJERO_ID || ',' || :OLD.NOMBRE || ',' || :OLD.APELLIDO || ',' || :OLD.EMAIL || ',' || :OLD.TELEFONO);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_RESERVAS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_RESERVAS_trg
    AFTER INSERT OR UPDATE OR DELETE ON RESERVAS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('RESERVAS', USER, 'INSERT', :NEW.RESERVA_ID || ',' || :NEW.VUELO_ID || ',' || :NEW.PASAJERO_ID || ',' || :NEW.FECHA_RESERVA);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('RESERVAS', USER, 'UPDATE', :NEW.RESERVA_ID || ',' || :NEW.VUELO_ID || ',' || :NEW.PASAJERO_ID || ',' || :NEW.FECHA_RESERVA);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('RESERVAS', USER, 'DELETE', :OLD.RESERVA_ID || ',' || :OLD.VUELO_ID || ',' || :OLD.PASAJERO_ID || ',' || :OLD.FECHA_RESERVA);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_CLASES_DE_VUELO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_CLASES_DE_VUELO_trg
    AFTER INSERT OR UPDATE OR DELETE ON CLASES_DE_VUELO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CLASES_DE_VUELO', USER, 'INSERT', :NEW.CLASE_VUELO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.DESCRIPCION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CLASES_DE_VUELO', USER, 'UPDATE', :NEW.CLASE_VUELO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.DESCRIPCION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CLASES_DE_VUELO', USER, 'DELETE', :OLD.CLASE_VUELO_ID || ',' || :OLD.NOMBRE || ',' || :OLD.DESCRIPCION);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_PRECIOS_DE_CLASES_DE_VUELO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_PRECIOS_DE_CLASES_DE_VUELO_trg
    AFTER INSERT OR UPDATE OR DELETE ON PRECIOS_DE_CLASES_DE_VUELO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('PRECIOS_DE_CLASES_DE_VUELO', USER, 'INSERT', :NEW.PRECIO_ID || ',' || :NEW.CLASE_VUELO_ID || ',' || :NEW.PRECIO);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('PRECIOS_DE_CLASES_DE_VUELO', USER, 'UPDATE', :NEW.PRECIO_ID || ',' || :NEW.CLASE_VUELO_ID || ',' || :NEW.PRECIO);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('PRECIOS_DE_CLASES_DE_VUELO', USER, 'DELETE', :OLD.PRECIO_ID || ',' || :OLD.CLASE_VUELO_ID || ',' || :OLD.PRECIO);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_ASIENTOS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_ASIENTOS_trg
    AFTER INSERT OR UPDATE OR DELETE ON ASIENTOS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('ASIENTOS', USER, 'INSERT', :NEW.ASIENTO_ID || ',' || :NEW.VUELO_ID || ',' || :NEW.NUMERO_ASIENTO || ',' || :NEW.CLASE_VUELO_ID);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('ASIENTOS', USER, 'UPDATE', :NEW.ASIENTO_ID || ',' || :NEW.VUELO_ID || ',' || :NEW.NUMERO_ASIENTO || ',' || :NEW.CLASE_VUELO_ID);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('ASIENTOS', USER, 'DELETE', :OLD.ASIENTO_ID || ',' || :OLD.VUELO_ID || ',' || :OLD.NUMERO_ASIENTO || ',' || :OLD.CLASE_VUELO_ID);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_EQUIPAJE_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_EQUIPAJE_trg
    AFTER INSERT OR UPDATE OR DELETE ON EQUIPAJE
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EQUIPAJE', USER, 'INSERT', :NEW.EQUIPAJE_ID || ',' || :NEW.PASAJERO_ID || ',' || :NEW.PESO_KG);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EQUIPAJE', USER, 'UPDATE', :NEW.EQUIPAJE_ID || ',' || :NEW.PASAJERO_ID || ',' || :NEW.PESO_KG);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EQUIPAJE', USER, 'DELETE', :OLD.EQUIPAJE_ID || ',' || :OLD.PASAJERO_ID || ',' || :OLD.PESO_KG);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_TARJETAS_DE_EMBARQUE_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_TARJETAS_DE_EMBARQUE_trg
    AFTER INSERT OR UPDATE OR DELETE ON TARJETAS_DE_EMBARQUE
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TARJETAS_DE_EMBARQUE', USER, 'INSERT', :NEW.TARJETA_EMBARQUE_ID || ',' || :NEW.RESERVA_ID || ',' || :NEW.ASIENTO_ID);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TARJETAS_DE_EMBARQUE', USER, 'UPDATE', :NEW.TARJETA_EMBARQUE_ID || ',' || :NEW.RESERVA_ID || ',' || :NEW.ASIENTO_ID);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TARJETAS_DE_EMBARQUE', USER, 'DELETE', :OLD.TARJETA_EMBARQUE_ID || ',' || :OLD.RESERVA_ID || ',' || :OLD.ASIENTO_ID);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_TRIPULACION_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_TRIPULACION_trg
    AFTER INSERT OR UPDATE OR DELETE ON TRIPULACION
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TRIPULACION', USER, 'INSERT', :NEW.TRIPULACION_ID || ',' || :NEW.NOMBRE || ',' || :NEW.APELLIDO || ',' || :NEW.ROL);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TRIPULACION', USER, 'UPDATE', :NEW.TRIPULACION_ID || ',' || :NEW.NOMBRE || ',' || :NEW.APELLIDO || ',' || :NEW.ROL);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TRIPULACION', USER, 'DELETE', :OLD.TRIPULACION_ID || ',' || :OLD.NOMBRE || ',' || :OLD.APELLIDO || ',' || :OLD.ROL);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_RUTAS_DE_VUELO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_RUTAS_DE_VUELO_trg
    AFTER INSERT OR UPDATE OR DELETE ON RUTAS_DE_VUELO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('RUTAS_DE_VUELO', USER, 'INSERT', :NEW.RUTA_VUELO_ID || ',' || :NEW.ORIGEN_AEROPUERTO_ID || ',' || :NEW.DESTINO_AEROPUERTO_ID || ',' || :NEW.DISTANCIA_KM);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('RUTAS_DE_VUELO', USER, 'UPDATE', :NEW.RUTA_VUELO_ID || ',' || :NEW.ORIGEN_AEROPUERTO_ID || ',' || :NEW.DESTINO_AEROPUERTO_ID || ',' || :NEW.DISTANCIA_KM);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('RUTAS_DE_VUELO', USER, 'DELETE', :OLD.RUTA_VUELO_ID || ',' || :OLD.ORIGEN_AEROPUERTO_ID || ',' || :OLD.DESTINO_AEROPUERTO_ID || ',' || :OLD.DISTANCIA_KM);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_EQUIPOS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_EQUIPOS_trg
    AFTER INSERT OR UPDATE OR DELETE ON EQUIPOS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EQUIPOS', USER, 'INSERT', :NEW.EQUIPO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.DESCRIPCION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EQUIPOS', USER, 'UPDATE', :NEW.EQUIPO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.DESCRIPCION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EQUIPOS', USER, 'DELETE', :OLD.EQUIPO_ID || ',' || :OLD.NOMBRE || ',' || :OLD.DESCRIPCION);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_TRIPULACIONES_VUELOS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_TRIPULACIONES_VUELOS_trg
    AFTER INSERT OR UPDATE OR DELETE ON TRIPULACIONES_VUELOS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TRIPULACIONES_VUELOS', USER, 'INSERT', :NEW.TRIPULACION_ID || ',' || :NEW.VUELO_ID);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TRIPULACIONES_VUELOS', USER, 'UPDATE', :NEW.TRIPULACION_ID || ',' || :NEW.VUELO_ID);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TRIPULACIONES_VUELOS', USER, 'DELETE', :OLD.TRIPULACION_ID || ',' || :OLD.VUELO_ID);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_COMENTARIOS_DE_USUARIOS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_COMENTARIOS_DE_USUARIOS_trg
    AFTER INSERT OR UPDATE OR DELETE ON COMENTARIOS_DE_USUARIOS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('COMENTARIOS_DE_USUARIOS', USER, 'INSERT', :NEW.COMENTARIO_ID || ',' || :NEW.USUARIO_ID || ',' || :NEW.COMENTARIO || ',' || :NEW.FECHA_COMENTARIO);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('COMENTARIOS_DE_USUARIOS', USER, 'UPDATE', :NEW.COMENTARIO_ID || ',' || :NEW.USUARIO_ID || ',' || :NEW.COMENTARIO || ',' || :NEW.FECHA_COMENTARIO);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('COMENTARIOS_DE_USUARIOS', USER, 'DELETE', :OLD.COMENTARIO_ID || ',' || :OLD.USUARIO_ID || ',' || :OLD.COMENTARIO || ',' || :OLD.FECHA_COMENTARIO);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_VALORACIONES_DE_VUELOS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_VALORACIONES_DE_VUELOS_trg
    AFTER INSERT OR UPDATE OR DELETE ON VALORACIONES_DE_VUELOS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('VALORACIONES_DE_VUELOS', USER, 'INSERT', :NEW.VALORACION_ID || ',' || :NEW.VUELO_ID || ',' || :NEW.USUARIO_ID || ',' || :NEW.VALORACION || ',' || :NEW.COMENTARIO);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('VALORACIONES_DE_VUELOS', USER, 'UPDATE', :NEW.VALORACION_ID || ',' || :NEW.VUELO_ID || ',' || :NEW.USUARIO_ID || ',' || :NEW.VALORACION || ',' || :NEW.COMENTARIO);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('VALORACIONES_DE_VUELOS', USER, 'DELETE', :OLD.VALORACION_ID || ',' || :OLD.VUELO_ID || ',' || :OLD.USUARIO_ID || ',' || :OLD.VALORACION || ',' || :OLD.COMENTARIO);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_CONTACTOS_DE_EMERGENCIA_DE_PASAJEROS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_CONTACTOS_DE_EMERGENCIA_DE_PASAJEROS_trg
    AFTER INSERT OR UPDATE OR DELETE ON CONTACTOS_DE_EMERGENCIA_DE_PASAJEROS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CONTACTOS_DE_EMERGENCIA_DE_PASAJEROS', USER, 'INSERT', :NEW.CONTACTO_ID || ',' || :NEW.PASAJERO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.APELLIDO || ',' || :NEW.TELEFONO);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CONTACTOS_DE_EMERGENCIA_DE_PASAJEROS', USER, 'UPDATE', :NEW.CONTACTO_ID || ',' || :NEW.PASAJERO_ID || ',' || :NEW.NOMBRE || ',' || :NEW.APELLIDO || ',' || :NEW.TELEFONO);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CONTACTOS_DE_EMERGENCIA_DE_PASAJEROS', USER, 'DELETE', :OLD.CONTACTO_ID || ',' || :OLD.PASAJERO_ID || ',' || :OLD.NOMBRE || ',' || :OLD.APELLIDO || ',' || :OLD.TELEFONO);
        END IF;
    END;
    
